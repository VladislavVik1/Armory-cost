const fs = require('fs');
const https = require('https');
const WebSocket = require('ws');

const PORT = 8080;
const FILE_PATH = "orders.json"; // –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤

// –ó–∞–≥—Ä—É–∂–∞–µ–º SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
const sslOptions = {
    cert: fs.readFileSync('/etc/letsencrypt/live/pmk-eagles.shop/fullchain.pem'),
    key: fs.readFileSync('/etc/letsencrypt/live/pmk-eagles.shop/privkey.pem')
};

// –°–æ–∑–¥–∞—ë–º HTTPS-—Å–µ—Ä–≤–µ—Ä
const server = https.createServer(sslOptions);

// –°–æ–∑–¥–∞—ë–º WebSocket-—Å–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä—Ö HTTPS
const wss = new WebSocket.Server({ server });

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–∫–∞–∑—ã –∏–∑ —Ñ–∞–π–ª–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
let orders = [];
if (fs.existsSync(FILE_PATH)) {
    try {
        orders = JSON.parse(fs.readFileSync(FILE_PATH, "utf8"));
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è orders.json:", error);
        orders = []; // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
    }
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
wss.on("connection", (ws) => {
    console.log("üîó –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω!");

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã –Ω–æ–≤–æ–º—É –∫–ª–∏–µ–Ω—Ç—É
    ws.send(JSON.stringify({ type: "init", orders }));

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    ws.on("message", (message) => {
        try {
            let data = JSON.parse(message);
            if (data.type === "new_order") {
                // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ –º–∞—Å—Å–∏–≤
                orders.push(data.order);

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
                fs.writeFileSync(FILE_PATH, JSON.stringify(orders, null, 2));

                // –†–∞—Å—Å—ã–ª–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –≤—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º
                wss.clients.forEach((client) => {
                    if (client.readyState === WebSocket.OPEN) {
                        client.send(JSON.stringify({ type: "new_order", order: data.order }));
                    }
                });

                console.log("üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!");
            }
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞:", error);
        }
    });

    ws.on("close", () => {
        console.log("‚ùå –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è.");
    });
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
server.listen(PORT, () => {
    console.log(`‚úÖ WebSocket —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ wss://pmk-eagles.shop:${PORT}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞
server.on("error", (error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", error);
});
