const fs = require('fs');
const https = require('https');
const WebSocket = require('ws');

// SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
const SSL_CERT_PATH = '/etc/letsencrypt/live/pmk-eagles.shop/fullchain.pem';
const SSL_KEY_PATH = '/etc/letsencrypt/live/pmk-eagles.shop/privkey.pem';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
if (!fs.existsSync(SSL_CERT_PATH) || !fs.existsSync(SSL_KEY_PATH)) {
    console.error("‚ùå –û—à–∏–±–∫–∞: SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
    process.exit(1);
}

// –°–æ–∑–¥–∞—ë–º HTTPS-—Å–µ—Ä–≤–µ—Ä
const server = https.createServer({
    cert: fs.readFileSync(SSL_CERT_PATH),
    key: fs.readFileSync(SSL_KEY_PATH),
});

const PORT = 8080;
const FILE_PATH = "orders.json"; // –§–∞–π–ª —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–∫–∞–∑—ã –∏–∑ —Ñ–∞–π–ª–∞
let orders = [];
if (fs.existsSync(FILE_PATH)) {
    try {
        orders = JSON.parse(fs.readFileSync(FILE_PATH, "utf8"));
    } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ orders.json:", err);
    }
}

// –°–æ–∑–¥–∞—ë–º WebSocket-—Å–µ—Ä–≤–µ—Ä
const wss = new WebSocket.Server({ server });

wss.on("connection", (ws) => {
    console.log("üîó –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω!");

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç—É
    ws.send(JSON.stringify({ type: "init", orders }));

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    ws.on("message", (message) => {
        try {
            let data = JSON.parse(message);
            if (data.type === "new_order") {
                console.log("üì© –ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑:", data.order);

                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑
                orders.push(data.order);

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑—ã –≤ —Ñ–∞–π–ª
                fs.writeFileSync(FILE_PATH, JSON.stringify(orders, null, 2));

                // –†–∞—Å—Å—ã–ª–∞–µ–º –≤—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º
                broadcastOrders();
                console.log("üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–æ–±–∞–≤–ª–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º!");
            }
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞:", error);
        }
    });

    ws.on("close", () => {
        console.log("‚ùå –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è.");
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –≤—Å–µ–º –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º
function broadcastOrders() {
    wss.clients.forEach((client) => {
        if (client.readyState === WebSocket.OPEN) {
            client.send(JSON.stringify({ type: "init", orders }));
        }
    });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
server.listen(PORT, () => {
    console.log(`‚úÖ WebSocket —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ wss://pmk-eagles.shop:${PORT}`);
});
