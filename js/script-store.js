// –û–±—ä–µ–∫—Ç —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∏—Ö —Ü–µ–Ω–∞–º–∏ (–∑–¥–µ—Å—å –ø—Ä–∏–≤–µ–¥—ë–Ω –ø—Ä–∏–º–µ—Ä, –¥–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
const priceList = {
                "–ê–ö–ú –≤–µ—Å–ª–æ": { "unitPrice": 500, "bulkPrice": 400 },
                "–ê–ö–ú–°": { "unitPrice": 550, "bulkPrice": 450 },
                "–ê–ö-74": { "unitPrice": 600, "bulkPrice": 500 },
                "–ê–ö–°-74–ù": { "unitPrice": 650, "bulkPrice": 560 },
                "–ê–ö–°-74–ù-–ù–ü–ó-–ü–ª–∞–Ω–∫–∞": { "unitPrice": 750, "bulkPrice": 600 },
                "–ê–ö–°-74–ù(–ë-13 –ü–ª–∞–Ω–∫–∞)": { "unitPrice": 800, "bulkPrice": 680 },
                "–ê–ö-74–£": { "unitPrice": 450, "bulkPrice": 400 },
                "–ê–ö-74–£–ù": { "unitPrice": 500, "bulkPrice": 450 },
                "–ê–ö103-105": { "unitPrice": 1000, "bulkPrice": 900 },
                "–ê–ö-103-105 –ë13-–ó–µ–Ω–∏—Ç–∫–∞": { "unitPrice": 1100, "bulkPrice": 1000 },
                "–í–ê–õ": { "unitPrice": 900, "bulkPrice": 800 },
                "–í–∏–Ω—Ç–æ—Ä–µ–∑": { "unitPrice": 930, "bulkPrice": 820 },
                "–ú16–ê4 —Ä—É—á–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏": { "unitPrice": 1000, "bulkPrice": 900 },
                "–ú16–ê4": { "unitPrice": 1050, "bulkPrice": 1000 },
                "–ú4–ê1": { "unitPrice": 1400, "bulkPrice": 1300 },
                "–§–ù-2000": { "unitPrice": 3000, "bulkPrice": 2400 },
                "HK G36KV": { "unitPrice": 2200, "bulkPrice": 2000 },
                "KH2002 CAMA": { "unitPrice": 2300, "bulkPrice": 2200 },
                "MK17+ –í–°–ï –í–ê–†–ò–ê–¶–ò–ò": { "unitPrice": 1900, "bulkPrice": 1800 },
                "MSX": { "unitPrice": 3000, "bulkPrice": 3000 },
    };
// –ö–æ—Ä–∑–∏–Ω–∞ (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—É—Å—Ç–∞—è)
let cart = localStorage.getItem("cart")
  ? JSON.parse(localStorage.getItem("cart"))
  : [];
function saveCart() {
  localStorage.setItem("cart", JSON.stringify(cart));
}
function openModal(category) {
    let content = '';
    switch (category) {
        case 'automats':
                    content = '<h2>–ê–≤—Ç–æ–º–∞—Ç—ã</h2><table><tr><th>–ê–≤—Ç–æ–º–∞—Ç</th><th>–¶–µ–Ω–∞ –∑–∞ 1 —à—Ç $</th><th>–¶–µ–Ω–∞ –∑–∞ 10 —à—Ç $</th><th>–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</th></tr><tr><td>–ê–ö–ú –≤–µ—Å–ª–æ</td><td>500</td><td>4000</td><td><button onclick="addToCart(\'–ê–ö–ú –≤–µ—Å–ª–æ\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ê–ö–ú –≤–µ—Å–ª–æ\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ê–ö–ú–°</td><td>550</td><td>4500</td><td><button onclick="addToCart(\'–ê–ö–ú–°\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ê–ö–ú–°\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ê–ö-74</td><td>600</td><td>5000</td><td><button onclick="addToCart(\'–ê–ö-74\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ê–ö-74\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ê–ö–°-74–ù</td><td>650</td><td>5600</td><td><button onclick="addToCart(\'–ê–ö–°-74–ù\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ê–ö–°-74–ù\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ê–ö–°-74–ù-–ù–ü–ó-–ü–ª–∞–Ω–∫–∞</td><td>750</td><td>6000</td><td><button onclick="addToCart(\'–ê–ö–°-74–ù-–ù–ü–ó-–ü–ª–∞–Ω–∫–∞\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ê–ö–°-74–ù-–ù–ü–ó-–ü–ª–∞–Ω–∫–∞\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ê–ö–°-74–ù(–ë-13 –ü–ª–∞–Ω–∫–∞)</td><td>800</td><td>6800</td><td><button onclick="addToCart(\'–ê–ö–°-74–ù(–ë-13 –ü–ª–∞–Ω–∫–∞)\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ê–ö–°-74–ù(–ë-13 –ü–ª–∞–Ω–∫–∞)\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ê–ö-74–£</td><td>450</td><td>4000</td><td><button onclick="addToCart(\'–ê–ö-74–£\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ê–ö-74–£\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ê–ö-74–£–ù</td><td>500</td><td>4500</td><td><button onclick="addToCart(\'–ê–ö-74–£–ù\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ê–ö-74–£–ù\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ê–ö103-105</td><td>1000</td><td>9000</td><td><button onclick="addToCart(\'–ê–ö103-105\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ê–ö103-105\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ê–ö-103-105 –ë13-–ó–µ–Ω–∏—Ç–∫–∞</td><td>1100</td><td>10 000</td><td><button onclick="addToCart(\'–ê–ö-103-105 –ë13-–ó–µ–Ω–∏—Ç–∫–∞\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ê–ö-103-105 –ë13-–ó–µ–Ω–∏—Ç–∫–∞\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–í–ê–õ</td><td>900</td><td>8000</td><td><button onclick="addToCart(\'–í–ê–õ\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–í–ê–õ\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–í–∏–Ω—Ç–æ—Ä–µ–∑</td><td>930</td><td>8200</td><td><button onclick="addToCart(\'–í–∏–Ω—Ç–æ—Ä–µ–∑\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–í–∏–Ω—Ç–æ—Ä–µ–∑\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ú16–ê4 —Ä—É—á–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏</td><td>1000</td><td>9000</td><td><button onclick="addToCart(\'–ú16–ê4 —Ä—É—á–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ú16–ê4 —Ä—É—á–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ú16–ê4</td><td>1050</td><td>10 000</td><td><button onclick="addToCart(\'–ú16–ê4\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ú16–ê4\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–ú4–ê1</td><td>1400</td><td>13 000</td><td><button onclick="addToCart(\'–ú4–ê1\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–ú4–ê1\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>–§–ù-2000</td><td>3000</td><td>24 000</td><td><button onclick="addToCart(\'–§–ù-2000\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'–§–ù-2000\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>HK G36KV</td><td>2200</td><td>20 000</td><td><button onclick="addToCart(\'HK G36KV\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'HK G36KV\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>KH2002 CAMA</td><td>2300</td><td>22 000</td><td><button onclick="addToCart(\'KH2002 CAMA\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'KH2002 CAMA\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>MK17+ –í–°–ï –í–ê–†–ò–ê–¶–ò–ò</td><td>1900</td><td>18 000</td><td><button onclick="addToCart(\'MK17+ –í–°–ï –í–ê–†–ò–ê–¶–ò–ò\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'MK17+ –í–°–ï –í–ê–†–ò–ê–¶–ò–ò\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr><tr><td>MSX</td><td>3000</td><td>30 000</td><td><button onclick="addToCart(\'MSX\', 1)">–î–æ–±–∞–≤–∏—Ç—å 1 —à—Ç</button><button onclick="addToCart(\'MSX\', 10)">–î–æ–±–∞–≤–∏—Ç—å 10 —à—Ç</button></td></tr></table>';
                    break;
        default:
            content = '<h2>–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</h2>';
    }
    document.getElementById("modal-body").innerHTML = content;
    document.getElementById("modal").style.display = 'flex';
}
function addToCart(productName, quantity) {
    if (!priceList[productName]) {
        alert("–û—à–∏–±–∫–∞: –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }

    let unitPrice = priceList[productName].unitPrice || 0;
    let bulkPrice = priceList[productName].bulkPrice || unitPrice;

    let bulkQuantity = Math.floor(quantity / 10);
    let remainingQuantity = quantity % 10;
    let totalPrice = (bulkQuantity * bulkPrice * 10) + (remainingQuantity * unitPrice);

    const existingProduct = cart.find(item => item.name === productName);
    if (existingProduct) {
        existingProduct.quantity += quantity;
    } else {
        cart.push({ name: productName, quantity });
    }

    saveCart();
    alert(`${productName} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É`);
    updateCartDisplay();
}
function updateCartDisplay() {
    const cartItemsList = document.getElementById("cart-items");
    if (!cartItemsList) {
        console.error("‚ùå –û—à–∏–±–∫–∞: —ç–ª–µ–º–µ–Ω—Ç #cart-items –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }

    cartItemsList.innerHTML = "";
    let totalSum = 0;

    if (!cart || cart.length === 0) {
        cartItemsList.innerHTML = "<p>üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞...</p>";
    }

    cart.forEach((item, index) => {
        if (!priceList || !priceList[item.name]) {
            console.warn(`‚ö† –¶–µ–Ω–∞ –¥–ª—è "${item.name}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`);
            return;
        }

        let bulkPrice = priceList[item.name]?.bulkPrice || 0;
        let unitPrice = priceList[item.name]?.unitPrice || 0;
        let bulkQuantity = Math.floor(item.quantity / 10);
        let remainingQuantity = item.quantity % 10;
        let totalPrice = (bulkQuantity * bulkPrice * 10) + (remainingQuantity * unitPrice);

        item.totalPrice = totalPrice;
        totalSum += totalPrice;

        const li = document.createElement("li");
        li.setAttribute("data-index", index);
        li.innerHTML = `
            ${item.name} (<span class="item-quantity">${item.quantity}</span> —à—Ç) ‚Äì 
            <span class="item-total">${totalPrice.toFixed(2)}</span> $
            <button class="cart-plus">+</button>
            <button class="cart-minus">‚Äì</button>
            <button class="cart-remove">√ó</button>
        `;
        cartItemsList.appendChild(li);

        // üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        li.querySelector(".cart-plus").addEventListener("click", function () {
            item.quantity++;
            saveCart();
            updateCartDisplay();
        });

        li.querySelector(".cart-minus").addEventListener("click", function () {
            if (item.quantity > 1) {
                item.quantity--;
            } else {
                cart.splice(index, 1);
            }
            saveCart();
            updateCartDisplay();
        });

        li.querySelector(".cart-remove").addEventListener("click", function () {
            cart.splice(index, 1);
            saveCart();
            updateCartDisplay();
        });
    });

    // üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö–æ—Ä–∑–∏–Ω–∞"
    const cartButton = document.querySelector(".cart-button");
    if (cartButton) {
        cartButton.textContent = cart.length > 0 
            ? `–ö–æ—Ä–∑–∏–Ω–∞ (${cart.length} —Ç–æ–≤–∞—Ä–æ–≤, ${totalSum.toFixed(2)} $)`
            : "–ö–æ—Ä–∑–∏–Ω–∞";
    }

    // üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã
    const totalPriceElement = document.getElementById("total-price");
    if (totalPriceElement) {
        totalPriceElement.textContent = `–û–±—â–∞—è —Å—É–º–º–∞: ${totalSum.toFixed(2)} $`;
    }
}
function openCart() {
    let cartModal = document.getElementById("cart-modal");
    if (cartModal) {
        cartModal.style.display = "block";
        updateCartDisplay();
    }
}
function closeCart() {
    let cartModal = document.getElementById("cart-modal");
    if (cartModal) {
        cartModal.style.display = "none";
    }
}
function closeModal() {
    let modal = document.getElementById("modal");
    if (modal) {
        modal.style.display = "none";
    }
}
document.addEventListener("click", function (event) {
    let modal = document.getElementById("modal");
    if (modal && event.target === modal) {
        closeModal();
    }
});
function clearCart() {
    cart = [];
    localStorage.removeItem("cart");
    updateCartDisplay();
}
function sendOrder() {
    if (cart.length === 0) {
        alert("‚ùå –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!");
        return;
    }

    let orderNumber = `ORD-${Date.now()}`;
    let commentElement = document.getElementById("order-comment");
    let comment = commentElement ? commentElement.value : "–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è";

    let order = {
        orderNumber: orderNumber,
        items: cart.map(item => ({
            name: item.name,
            quantity: item.quantity,
            totalPrice: item.quantity * (priceList[item.name]?.unitPrice || 0)
        })),
        totalPrice: cart.reduce((sum, item) => sum + (item.quantity * (priceList[item.name]?.unitPrice || 0)), 0),
        comment: comment
    };

    console.log("üìå –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", order);

    fetch("https://pmk-eagles.shop/api/orders", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(order)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        console.log("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:", data);
        alert("‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ WebSocket
        if (socket) {
            socket.emit("newOrder", order);
            console.log("üì° –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ WebSocket");
        }

        clearCart();
        window.location.href = "orders.html";
    })
    .catch(error => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞:", error);
        alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");
    });
}

document.addEventListener("DOMContentLoaded", function () {
    let sendOrderBtn = document.querySelector(".snapshot");

    if (sendOrderBtn) {
        sendOrderBtn.addEventListener("click", sendOrder);
    }
});


document.addEventListener("DOMContentLoaded", function () {
    let sendOrderBtn = document.querySelector(".snapshot");

    if (sendOrderBtn) {
        sendOrderBtn.addEventListener("click", function () {
            if (cart.length === 0) {
                alert("‚ùå –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!");
                return;
            }

            let orderNumber = `ORD-${Date.now()}`;
            let comment = document.getElementById("order-comment").value || "–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è";

            let order = {
                orderNumber: orderNumber,
                items: cart.map(item => ({
                    name: item.name,
                    quantity: item.quantity,
                    totalPrice: item.quantity * (priceList[item.name]?.unitPrice || 0)
                })),
                totalPrice: cart.reduce((sum, item) => sum + (item.quantity * (priceList[item.name]?.unitPrice || 0)), 0),
                comment: comment
            };

            let orders = localStorage.getItem("orders") ? JSON.parse(localStorage.getItem("orders")) : [];
            orders.push(order);
            localStorage.setItem("orders", JSON.stringify(orders));

            clearCart();
            window.location.href = "orders.html";
        });
    }
});
fetch("https://pmk-eagles.shop/api/orders", {
    method: "POST",
    headers: {
        "Content-Type": "application/json"
    },
    body: JSON.stringify(order)
})
.then(response => response.json())
.then(data => {
    console.log("–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", data);
    clearCart();
    window.location.href = "orders.html";
});

