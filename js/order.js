document.addEventListener("DOMContentLoaded", function () {
    connectWebSocket();
    loadOrders();

    let clearOrdersButton = document.querySelector(".clear-orders");
    if (clearOrdersButton) {
        clearOrdersButton.addEventListener("click", function () {
            if (socket && socket.readyState === WebSocket.OPEN) {
                socket.send(JSON.stringify({ type: "clear_orders" }));
                console.log("üóë –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—á–∏—Å—Ç–∫—É –∑–∞–∫–∞–∑–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–µ—Ä–≤–µ—Ä—É");
            } else {
                console.warn("‚ö† WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω! –û—á–∏—Å—Ç–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.");
            }
        });
    }

    let sendScreenshotButton = document.querySelector("#cart-modal button.snapshot");
    if (sendScreenshotButton) {
        sendScreenshotButton.addEventListener("click", function () {
            let cartItems = JSON.parse(localStorage.getItem("cart")) || [];

            if (cartItems.length === 0) {
                alert("‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∑–∞–∫–∞–∑–∞.");
                return;
            }

            let now = new Date();
            let formattedDate = now.toLocaleDateString() + " " + now.toLocaleTimeString();

            let totalPriceElement = document.getElementById("total-price");
            let totalPrice = totalPriceElement ? parseFloat(totalPriceElement.textContent.replace(/\D/g, '')) : 0;

            let commentInput = document.getElementById("order-comment");
            let commentText = commentInput ? commentInput.value.trim() : "–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è";

            let newOrder = {
                type: "new_order",
                order: {
                    date: formattedDate,
                    items: cartItems,
                    total: totalPrice.toFixed(2),
                    comment: commentText
                }
            };

            if (socket && socket.readyState === WebSocket.OPEN) {
                socket.send(JSON.stringify(newOrder));
                console.log("üì° –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ WebSocket:", newOrder);
            } else {
                console.warn("‚ö† WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω! –ó–∞–∫–∞–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –ª–æ–∫–∞–ª—å–Ω–æ.");
                let storedOrders = JSON.parse(localStorage.getItem("sentOrders")) || [];
                storedOrders.push(newOrder.order);
                localStorage.setItem("sentOrders", JSON.stringify(storedOrders));
            }

            alert("üì¶ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");

            localStorage.removeItem("cart");
            window.location.href = "orders.html";
        });
    } else {
        console.warn("‚ùó –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ `.snapshot` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
    }
});

// **–ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è WebSocket**
let socket;

function connectWebSocket() {
    socket = new WebSocket("wss://pmk-eagles.shop:8080");

    socket.onopen = function () {
        console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É");
        socket.send(JSON.stringify({ type: "get_orders" }));
    };

    socket.onmessage = function (event) {
        try {
            let data = JSON.parse(event.data);
            console.log("üì© –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞:", data);

            if (data.type === "init") {
                localStorage.setItem("orders", JSON.stringify(data.orders));
                loadOrders();
            } else if (data.type === "new_order") {
                let orders = JSON.parse(localStorage.getItem("orders")) || [];
                orders.push(data.order);
                localStorage.setItem("orders", JSON.stringify(orders));
                loadOrders();
            } else if (data.type === "orders_cleared") {
                console.log("üóë –í—Å–µ –∑–∞–∫–∞–∑—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã —Å–µ—Ä–≤–µ—Ä–æ–º");
                localStorage.removeItem("orders");
                loadOrders();
            }
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö WebSocket:", error);
        }
    };

    socket.onerror = function (error) {
        console.error("‚ö†Ô∏è –û—à–∏–±–∫–∞ WebSocket:", error);
    };

    socket.onclose = function () {
        console.log("‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å WebSocket —Å–µ—Ä–≤–µ—Ä–æ–º –∑–∞–∫—Ä—ã—Ç–æ.");
        setTimeout(connectWebSocket, 5000);
    };
}


// **–§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤**
function loadOrders() {
    let orders = JSON.parse(localStorage.getItem("orders")) || [];
    let ordersList = document.getElementById("orders-list");

    if (!ordersList) {
        console.error("‚ùå –û—à–∏–±–∫–∞: —ç–ª–µ–º–µ–Ω—Ç #orders-list –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }

    ordersList.innerHTML = "";
    if (orders.length === 0) {
        ordersList.innerHTML = "<p style='color: white;'>–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç...</p>";
        return;
    }

    orders.forEach((order, index) => {
        let orderDiv = document.createElement("div");
        orderDiv.classList.add("order");

        let itemsHTML = order.items.map(item =>
            `<p>${item.name} ‚Äì ${item.quantity} —à—Ç.</p>`
        ).join("");

        let totalPrice = order.total ? `${order.total} $` : "–°—É–º–º–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞";

        orderDiv.innerHTML = `
            <strong>–ó–∞–∫–∞–∑ ‚Ññ${index + 1}</strong> (${order.date})<br>
            ${itemsHTML}
            <p><strong>–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞:</strong> ${totalPrice}</p>
        `;

        ordersList.appendChild(orderDiv);
    });
}




document.addEventListener("DOMContentLoaded", function () {
    let clearOrdersButton = document.querySelector(".clear-orders");
    if (clearOrdersButton) {
        clearOrdersButton.addEventListener("click", function () {
            if (socket && socket.readyState === WebSocket.OPEN) {
                socket.send(JSON.stringify({ type: "clear_orders" }));
                console.log("üóë –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—á–∏—Å—Ç–∫—É –∑–∞–∫–∞–∑–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–µ—Ä–≤–µ—Ä—É");

                // –¢–∞–π–º–µ—Ä –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç
                setTimeout(() => {
                    console.warn("‚è≥ –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª, –æ—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ.");
                    localStorage.removeItem("orders");
                    loadOrders();
                }, 5000);
            } else {
                console.warn("‚ö† WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω! –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ.");
                localStorage.removeItem("orders");
                loadOrders();
            }
        });
    }
});
